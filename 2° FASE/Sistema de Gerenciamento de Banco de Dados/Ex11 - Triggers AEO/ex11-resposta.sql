SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBPEDIDO;
CREATE DATABASE DBPEDIDO;

USE DBPEDIDO;

CREATE TABLE PRODUTO (
	IDPRODUTO INT NOT NULL AUTO_INCREMENT
    , NOME VARCHAR(45)
    , ESTOQUE INT
	, PRIMARY KEY(IDPRODUTO)
);

CREATE TABLE COMPRA (
	IDCOMPRA INT NOT NULL AUTO_INCREMENT
    , IDPRODUTO INT NOT NULL
	, QTDE INT
    , PRECOUNITARIO NUMERIC(8,2)
    , PRIMARY KEY (IDCOMPRA)
    , FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTO(IDPRODUTO)
);

CREATE TABLE VENDA (
	IDVENDA INT NOT NULL AUTO_INCREMENT
    , IDPRODUTO INT NOT NULL
	, QTDE INT
    , PRECOUNITARIO NUMERIC(8,2)
    , PRIMARY KEY (IDVENDA)
    , FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTO(IDPRODUTO)
);

-- INSERINDO ALGUNS PRODUTOS PROS NOSSOS TESTES
INSERT INTO PRODUTO VALUES (NULL, "SMARTPHONE", 0);
INSERT INTO PRODUTO VALUES (NULL, "PLAYSTATION 4 PRO", 0);
INSERT INTO PRODUTO VALUES (NULL, "XBOX ONE X", 0);
INSERT INTO PRODUTO VALUES (NULL, "HEADSET", 0);
INSERT INTO PRODUTO VALUES (NULL, "TECLADO", 0);
INSERT INTO PRODUTO VALUES (NULL, "MOUSE", 0);

DELIMITER $$


-- QUANDO COMPRAR UM PRODUTO, A QUANTIDADE COMPRADA DEVE SER ADICIONADA AO ESTOQUE
CREATE TRIGGER TK_COMPRAR_PRODUTO_INSERT AFTER INSERT ON COMPRA FOR EACH ROW
BEGIN
    
    -- ADICIONANDO QUANTIDADE DE ITENS NA COMPRA
	UPDATE PRODUTO SET ESTOQUE = ESTOQUE + NEW.QTDE WHERE IDPRODUTO = NEW.IDPRODUTO; 
    
END $$ 

-- QUANDO VENDER UM PRODUTO, A QUANTIDADE VENDIDA DEVE SER REMOVIDA DO ESTOQUE
CREATE TRIGGER TK_VENDER_PRODUTO_INSERT BEFORE INSERT ON VENDA FOR EACH ROW
BEGIN
	
    -- DECLARAÇÃO DE VARIÁVEIS
    DECLARE QTDE_PRODUTO INT;
    
    -- PEGAR QUANTIDADE ATUAL
    SELECT ESTOQUE INTO QTDE_PRODUTO FROM PRODUTO WHERE IDPRODUTO = NEW.IDPRODUTO;
    
    -- NÃO PODE SER VENDIDA UMA QUANTIDADE MAIOR QUE A DO ESTOQUE (QUESTÃO 5)
    IF(QTDE_PRODUTO - NEW.QTDE < 0) THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "NÃO HÁ QUANTIDADE SUFICIENTE DO PRODUTO EM ESTOQUE PARA VENDA";
    END IF;
    
	-- REMOVENDO QUANTIDADE DE ITENS NA VENDA
    UPDATE PRODUTO SET ESTOQUE = ESTOQUE - NEW.QTDE WHERE IDPRODUTO = NEW.IDPRODUTO;

END $$ 

-- ALTERAR ESTOQUE QUANDO DELETAR A COMPRA DE UM PRODUTO
CREATE TRIGGER TK_COMPRAR_PRODUTO_DELETE BEFORE DELETE ON COMPRA FOR EACH ROW
BEGIN
	-- DECLARAÇÃO DE VARIÁVEIS
    DECLARE QTDE_PRODUTO INT;
    
	-- QUANTIDADE ATUAL DO PRODUTO
    SELECT ESTOQUE INTO QTDE_PRODUTO FROM PRODUTO WHERE IDPRODUTO = OLD.IDPRODUTO;
    
    IF(QTDE_PRODUTO - OLD.QTDE < 0) THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "NÃO HÁ QUANTIDADE SUFICIENTE PARA EXCLUSÃO";
	ELSE
		UPDATE PRODUTO SET ESTOQUE = ESTOQUE - OLD.QTDE WHERE IDPRODUTO = OLD.IDPRODUTO;
    END IF;

END $$

-- ALTERAR QUANTIDADE EM ESTOQUE SE VENDA FOR EXCLUÍDA
CREATE TRIGGER TK_VENDER_PRODUTO_DELETE AFTER DELETE ON VENDA FOR EACH ROW
BEGIN
    
    -- ATUALIZAÇÃO DA QUANTIDADE DE PRODUTO NO ESTOQUE
    UPDATE PRODUTO SET ESTOQUE = ESTOQUE + OLD.QTDE WHERE IDPRODUTO = OLD.IDPRODUTO;

END $$

CREATE TRIGGER TK_ATUALIZAR_PRODUTO_COMPRA BEFORE UPDATE ON COMPRA FOR EACH ROW 
BEGIN

	-- DECLARAÇÃO DE VARIÁVEIS
    DECLARE QTDE_PRODUTO INT;
	
    -- ADICIONANDO QUANTIDADE DE ITENS NA COMPRA
	UPDATE PRODUTO SET ESTOQUE = ESTOQUE + NEW.QTDE WHERE IDPRODUTO = NEW.IDPRODUTO;
    
	-- QUANTIDADE ATUAL DO PRODUTO
    SELECT ESTOQUE INTO QTDE_PRODUTO FROM PRODUTO WHERE IDPRODUTO = OLD.IDPRODUTO;
    
    IF(QTDE_PRODUTO - OLD.QTDE < 0) THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "NÃO HÁ QUANTIDADE SUFICIENTE PARA EXCLUSÃO";
	ELSE
		UPDATE PRODUTO SET ESTOQUE = ESTOQUE - OLD.QTDE WHERE IDPRODUTO = OLD.IDPRODUTO;
    END IF;

END $$

CREATE TRIGGER TK_ATUALIZAR_PRODUTO_VENDA BEFORE UPDATE ON VENDA FOR EACH ROW
BEGIN

	-- DECLARAÇÃO DE VARIÁVEIS
    DECLARE QTDE_PRODUTO INT;
    
    -- PEGAR QUANTIDADE ATUAL
    SELECT ESTOQUE INTO QTDE_PRODUTO FROM PRODUTO WHERE IDPRODUTO = NEW.IDPRODUTO;
    
    -- NÃO PODE SER VENDIDA UMA QUANTIDADE MAIOR QUE A DO ESTOQUE (QUESTÃO 5)
    IF(QTDE_PRODUTO - NEW.QTDE < 0) THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "NÃO HÁ QUANTIDADE SUFICIENTE DO PRODUTO EM ESTOQUE PARA VENDA";
    END IF;
    
	-- REMOVENDO QUANTIDADE DE ITENS NA VENDA
    UPDATE PRODUTO SET ESTOQUE = ESTOQUE - NEW.QTDE WHERE IDPRODUTO = NEW.IDPRODUTO;
    
    -- ATUALIZAÇÃO DA QUANTIDADE DE PRODUTO NO ESTOQUE
    UPDATE PRODUTO SET ESTOQUE = ESTOQUE + OLD.QTDE WHERE IDPRODUTO = OLD.IDPRODUTO;

END $$

DELIMITER ;

-- INSERÇÕES DE TESTES
INSERT INTO COMPRA VALUES (NULL, 1, 1, 40);
INSERT INTO COMPRA VALUES (NULL, 1, 5, 40);
INSERT INTO VENDA VALUES (NULL, 1, 2, 40);
INSERT INTO COMPRA VALUES (NULL, 2, 5, 50);

-- MOSTRAR A SELEÇÃO INICIAL DA TABELA PRODUTO
SELECT * FROM PRODUTO;