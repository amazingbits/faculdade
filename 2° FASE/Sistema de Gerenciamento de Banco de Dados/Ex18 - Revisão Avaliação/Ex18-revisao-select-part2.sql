-- CRIANDO DATABASE
DROP DATABASE IF EXISTS DBESCOLA;
CREATE DATABASE DBESCOLA;
USE DBESCOLA;

-- CRIANDO TABELAS
CREATE TABLE IF NOT EXISTS ALUNO(
IDALUNO INT NOT NULL AUTO_INCREMENT,
NOME TEXT,
PRIMARY KEY(IDALUNO));

CREATE TABLE IF NOT EXISTS DISCIPLINA(
IDDISCIPLINA INT NOT NULL AUTO_INCREMENT,
NOME TEXT,
PRIMARY KEY(IDDISCIPLINA));

CREATE TABLE IF NOT EXISTS MATRICULA(
IDMATRICULA INT NOT NULL AUTO_INCREMENT,
IDALUNO INT NOT NULL,
IDDISCIPLINA INT NOT NULL,
ANO INT,
SEMESTRE INT,
SITUACAO TEXT,
CONSTRAINT FK_MATRICULA_ALUNO
FOREIGN KEY (IDALUNO) REFERENCES ALUNO(IDALUNO),
CONSTRAINT FK_MATRICULA_DISCIPLINA
FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA(IDDISCIPLINA),
PRIMARY KEY(IDMATRICULA));

-- INSERINDO DADOS DE EXEMPLO
INSERT INTO ALUNO VALUES (NULL, "ADRIANO VILAR SUASSUNA");
INSERT INTO ALUNO VALUES (NULL, "CECÍLIA BENEVIDES DE CARVALHO MEIRELLES");
INSERT INTO ALUNO VALUES (NULL, "MANUEL CARNEIRO DE SOUZA BANDEIRA FILHO");

INSERT INTO DISCIPLINA VALUES (NULL, "PRODUÇÃO DA LEITURA E DA ESCRITA");
INSERT INTO DISCIPLINA VALUES (NULL, "INTRODUÇÃO AOS ESTUDOS LITERÁRIOS");
INSERT INTO DISCIPLINA VALUES (NULL, "ANTROPOLOGIA TEOLÓGICA");

INSERT INTO MATRICULA VALUES (NULL, 1, 1, 2015, 1, "CONCLUÍDO");
INSERT INTO MATRICULA VALUES (NULL, 2, 1, 2015, 1, "CONCLUÍDO");
INSERT INTO MATRICULA VALUES (NULL, 1, 2, 2015, 1, "CONCLUÍDO");
INSERT INTO MATRICULA VALUES (NULL, 1, 3, 2015, 2, "MATRICULADO");
INSERT INTO MATRICULA VALUES (NULL, 2, 1, 2015, 2, "MATRICULADO");
INSERT INTO MATRICULA VALUES (NULL, 3, 1, 2015, 1, "CONCLUÍDO");
INSERT INTO MATRICULA VALUES (NULL, 3, 2, 2015, 2, "MATRICULADO");
INSERT INTO MATRICULA VALUES (NULL, 3, 3, 2015, 1, "CANCELADO");
INSERT INTO MATRICULA VALUES (NULL, 3, 3, 2015, 2, "MATRICULADO");

-- RESPONDENDO OS EXERCÍCIOS

-- 1 - Crie uma consulta SQL que liste o código identificador da matricula, o código identificador da disciplina, o nome da disciplina, o código 
-- identificador do aluno, o nome do aluno, o ano da matricula, o semestre da matricula e a situação da matricula. Liste apenas as matriculas com 
-- ano igual a 2015 e semestre igual a 1.
SELECT 	MATRICULA.IDMATRICULA AS CODIGO_MATRICULA,
		DISCIPLINA.IDDISCIPLINA AS CODIGO_DISCIPLINA,
        DISCIPLINA.NOME AS DISCIPLINA,
        ALUNO.IDALUNO AS CODIGO_ALUNO,
        ALUNO.NOME AS ALUNO,
        MATRICULA.ANO AS ANO,
        MATRICULA.SEMESTRE AS SEMESTRE,
        MATRICULA.SITUACAO AS SITUACAO
FROM MATRICULA
INNER JOIN ALUNO ON 
(MATRICULA.IDALUNO = ALUNO.IDALUNO) 
INNER JOIN DISCIPLINA ON 
(MATRICULA.IDDISCIPLINA = DISCIPLINA.IDDISCIPLINA)
WHERE MATRICULA.SEMESTRE = 1
AND MATRICULA.ANO = 2015;

-- 2 - Crie uma consulta SQL que liste o código identificador do aluno, o nome do aluno, o código identificador da disciplina, o nome da disciplina 
-- e a situação da matricula. Liste apenas as matriculas com ano igual a 2015 e semestre igual a 2 e a disciplina “ANTROPOLOGIA TEOLÓGICA”, ordenado
-- pelo nome do aluno
SELECT 	ALUNO.IDALUNO AS CODIGO_ALUNO,
		ALUNO.NOME AS ALUNO,
        DISCIPLINA.IDDISCIPLINA AS CODIGO_DISCIPLINA,
        DISCIPLINA.NOME AS DISCIPLINA,
        MATRICULA.SITUACAO AS SITUACAO
FROM MATRICULA
INNER JOIN ALUNO ON 
(MATRICULA.IDALUNO = ALUNO.IDALUNO) 
INNER JOIN DISCIPLINA ON 
(MATRICULA.IDDISCIPLINA = DISCIPLINA.IDDISCIPLINA)
WHERE MATRICULA.ANO = 2015
AND MATRICULA.SEMESTRE = 2
AND DISCIPLINA.NOME = "ANTROPOLOGIA TEOLÓGICA"
ORDER BY ALUNO;

-- 3 - Crie uma consulta para listar a quantidade de matricula, quantidade de disciplinas, quantidade de alunos, agrupado por ano,
-- semestre e situação.
SELECT 	ANO,
		SEMESTRE,
        SITUACAO,
		COUNT(IDDISCIPLINA) AS QTDE_DISCIPLINA,
        COUNT(IDMATRICULA) AS QTDE_MATRICULA,
        COUNT(IDALUNO) AS QTDE_ALUNOS
FROM MATRICULA
GROUP BY ANO, SEMESTRE, SITUACAO;