-- CRIANDO DATABASE
DROP DATABASE IF EXISTS DBQUIZ;
CREATE DATABASE DBQUIZ;
USE DBQUIZ;

-- CRIANDO TABELAS
CREATE TABLE IF NOT EXISTS PARTICIPANTE(
IDPARTICIPANTE INT NOT NULL AUTO_INCREMENT,
NOME TEXT NOT NULL,
EMAIL TEXT NOT NULL,
PRIMARY KEY(IDPARTICIPANTE));

CREATE TABLE IF NOT EXISTS QUIZ(
IDQUIZ INT NOT NULL AUTO_INCREMENT,
TITULO TEXT,
DESCRICAO TEXT,
TIPO ENUM('T', 'P'),
PRIMARY KEY(IDQUIZ));

CREATE TABLE IF NOT EXISTS PERGUNTA(
IDPERGUNTA INT NOT NULL AUTO_INCREMENT,
IDQUIZ INT NOT NULL,
ENUNCIADO TEXT,
DTINICIAL DATETIME,
DTFINAL DATETIME,
CONSTRAINT FK_PERGUNTA_QUIZ
FOREIGN KEY (IDQUIZ) REFERENCES QUIZ(IDQUIZ),
PRIMARY KEY(IDPERGUNTA));

CREATE TABLE IF NOT EXISTS OPCAO(
IDOPCAO INT NOT NULL AUTO_INCREMENT,
IDPERGUNTA INT NOT NULL,
TEXTO TEXT,
CERTA ENUM('S','N','I'),
CONSTRAINT FK_OPCAO_PERGUNTA
FOREIGN KEY (IDPERGUNTA) REFERENCES PERGUNTA(IDPERGUNTA),
PRIMARY KEY(IDOPCAO));

CREATE TABLE IF NOT EXISTS RESPOSTA(
IDPARTICIPANTE INT NOT NULL,
IDPERGUNTA INT NOT NULL,
IDOPCAO INT NOT NULL,
DTRESPOSTA DATETIME,
FOREIGN KEY (IDPARTICIPANTE) REFERENCES PARTICIPANTE(IDPARTICIPANTE),
FOREIGN KEY (IDPERGUNTA) REFERENCES PERGUNTA(IDPERGUNTA),
FOREIGN KEY (IDOPCAO) REFERENCES OPCAO(IDOPCAO),
PRIMARY KEY(IDPARTICIPANTE, IDPERGUNTA));

-- ADICIONANDO PARTICIPANTES
INSERT INTO PARTICIPANTE VALUES (NULL, "JOÃO DA SILVA", "joão@email.com");
INSERT INTO PARTICIPANTE VALUES (NULL, "ROBERTO JERONIMO", "betinho@email.com");
INSERT INTO PARTICIPANTE VALUES (NULL, "JANAÍNA PEREIRA", "jaja@email.com");
INSERT INTO PARTICIPANTE VALUES (NULL, "CLEITON RIBEIRO", "cleiton_32@email.com");
INSERT INTO PARTICIPANTE VALUES (NULL, "MARIA OLIVEIRA", "mariah@email.com");

-- ADICIONANDO QUIZ
INSERT INTO QUIZ VALUES (NULL, "HARRY POTTER","PESQUISA PARA DESCOBRIR QUAL A MELHOR CASA DE HOGWARTS","T");
INSERT INTO QUIZ VALUES (NULL, "GROGRAFIA","PESQUISA PARA DESCOBRIR QUAL O MELHOR ESTADO DO BRASIL","T");
INSERT INTO QUIZ VALUES (NULL, "DESENVOLVIMENTO","PESQUISA PARA DESCOBRIR QUAL A MELHOR LINGUAGEM DE PROGRAMAÇÃO","P");

-- ADICIONANDO PERGUNTAS AOS QUIZ
INSERT INTO PERGUNTA VALUES (NULL, 1, "QUAL A MELHOR CASA DE HOGWARTS?", "2020-01-01", "2020-10-30");
INSERT INTO PERGUNTA VALUES (NULL, 2, "QUAL O MELHOR ESTADO DO BRASIL?", "2020-01-01", "2020-05-20");
INSERT INTO PERGUNTA VALUES (NULL, 3, "QUAL A MELHOR LINGUAGEM DE PROGRAMAÇÃO?", "2020-03-01", "2020-03-27");

-- ADICIONANDO OPÇÕES ÀS PERGUNTAS
INSERT INTO OPCAO VALUES (NULL, 1, "GRIFINÓRIA", "N");
INSERT INTO OPCAO VALUES (NULL, 1, "SONSERINA", "S");
INSERT INTO OPCAO VALUES (NULL, 1, "CORVINAL", "N");
INSERT INTO OPCAO VALUES (NULL, 1, "LUFA-LUFA", "N");

INSERT INTO OPCAO VALUES (NULL, 2, "SÃO PAULO", "N");
INSERT INTO OPCAO VALUES (NULL, 2, "SANTA CATARINA", "S");
INSERT INTO OPCAO VALUES (NULL, 2, "CEARÁ", "N");
INSERT INTO OPCAO VALUES (NULL, 2, "ESPÍRITO SANTO", "N");

INSERT INTO OPCAO VALUES (NULL, 3, "PYTHON", "N");
INSERT INTO OPCAO VALUES (NULL, 3, "PHP", "S");
INSERT INTO OPCAO VALUES (NULL, 3, "JAVASCRIPT", "N");
INSERT INTO OPCAO VALUES (NULL, 3, "C#", "N");

-- ADICIONANDO RESPOSTAS DE USUÁRIOS
INSERT INTO RESPOSTA VALUES (1, 1, 2, "2020-02-05");
INSERT INTO RESPOSTA VALUES (5, 1, 1, "2020-03-01");
INSERT INTO RESPOSTA VALUES (2, 2, 7, "2020-02-17");
INSERT INTO RESPOSTA VALUES (3, 3, 11, "2020-02-26");

-- RESPOSTAS AOS EXERCÍCIOS
-- 1 - Escreva os comandos SQL para listar o QUIZ com IDQUIZ = 2, as perguntas que pertencem esse QUIZ e as opções de resposta.
SELECT 	QUIZ.IDQUIZ AS CODIGO_QUIZ,
		PERGUNTA.ENUNCIADO AS PERGUNTA,
        (
			SELECT GROUP_CONCAT(TEXTO) FROM OPCAO WHERE IDPERGUNTA = 2
        ) AS OPCOES
FROM OPCAO
INNER JOIN PERGUNTA ON 
(OPCAO.IDPERGUNTA = PERGUNTA.IDPERGUNTA)
INNER JOIN QUIZ ON 
(PERGUNTA.IDQUIZ = QUIZ.IDQUIZ)
WHERE QUIZ.IDQUIZ = 2
GROUP BY CODIGO_QUIZ;

-- 2 - Escreva os comandos SQL para listar todas as participações, coloque o nome e o e-mail do participante, a resposta escolhida, o enunciado
-- da pergunta e o titulo e a descrição do QUIZ
SELECT 	PARTICIPANTE.NOME AS PARTICIPANTE,
		PARTICIPANTE.EMAIL AS EMAIL,
        OPCAO.TEXTO AS RESPOSTA,
        IF(OPCAO.CERTA = 'S', "SIM", "NÃO") AS CORRETA,
        PERGUNTA.ENUNCIADO AS PERGUNTA,
        QUIZ.TITULO AS TITULO,
        QUIZ.DESCRICAO AS DESCRICAO
FROM RESPOSTA
INNER JOIN PARTICIPANTE ON 
(RESPOSTA.IDPARTICIPANTE = PARTICIPANTE.IDPARTICIPANTE)
INNER JOIN OPCAO ON 
(RESPOSTA.IDOPCAO = OPCAO.IDOPCAO)
INNER JOIN PERGUNTA ON 
(RESPOSTA.IDPERGUNTA = PERGUNTA.IDPERGUNTA) 
INNER JOIN QUIZ ON 
(PERGUNTA.IDQUIZ = QUIZ.IDQUIZ);

-- 3 - Escreva os comandos SQL para listar somente as respostas certas, desde que o QUIZ seja do tipo “T”. Liste o código da pergunta, o
-- enunciado, e todos os dados da opção.
SELECT 	PERGUNTA.IDPERGUNTA AS CODIGO_PERGUNTA,
		PERGUNTA.ENUNCIADO AS ENUNCIADO,
        OPCAO.*
FROM RESPOSTA
INNER JOIN OPCAO ON 
(RESPOSTA.IDOPCAO = OPCAO.IDOPCAO)
INNER JOIN PERGUNTA ON 
(RESPOSTA.IDPERGUNTA = PERGUNTA.IDPERGUNTA)
INNER JOIN QUIZ ON 
(PERGUNTA.IDQUIZ = QUIZ.IDQUIZ)
WHERE OPCAO.CERTA = "S"
AND QUIZ.TIPO = "T";

-- 4 Para verificar qual pergunta teve mais participação foi utilizada uma consulta SQL que gerou o quadro abaixo, nesta tabela é
-- listado o código da pergunta e a quantidade de participantes que respondeu essa questão.
SELECT 	PERGUNTA.IDPERGUNTA AS CODIGO_PERGUNTA,
		PERGUNTA.ENUNCIADO AS PERGUNTA,
        COUNT(RESPOSTA.IDPARTICIPANTE) AS QTDE
FROM RESPOSTA
INNER JOIN PERGUNTA ON 
(RESPOSTA.IDPERGUNTA = PERGUNTA.IDPERGUNTA)
GROUP BY CODIGO_PERGUNTA, PERGUNTA
ORDER BY QTDE DESC;